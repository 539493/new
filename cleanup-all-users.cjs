#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞
function clearServerData() {
  const serverDataFile = path.join(__dirname, 'backend', 'server_data.json');
  
  try {
    if (fs.existsSync(serverDataFile)) {
      const emptyData = {
        teacherProfiles: {},
        studentProfiles: {},
        overbookingRequests: [],
        timeSlots: [],
        lessons: [],
        chats: [],
        posts: [],
        notifications: []
      };
      
      fs.writeFileSync(serverDataFile, JSON.stringify(emptyData, null, 2));
      console.log('‚úÖ –û—á–∏—â–µ–Ω —Ñ–∞–π–ª server_data.json');
    } else {
      console.log('‚ÑπÔ∏è  –§–∞–π–ª server_data.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ server_data.json:', error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
function clearLocalStorage() {
  console.log('üì± –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
  console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools (F12)');
  console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Application/Storage ‚Üí Local Storage');
  console.log('   3. –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ –∫–ª—é—á–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å "tutoring_"');
  console.log('   4. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏:');
  console.log('      Object.keys(localStorage).forEach(key => {');
  console.log('        if (key.startsWith("tutoring_")) {');
  console.log('          localStorage.removeItem(key);');
  console.log('        }');
  console.log('      });');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
function clearAllDataFiles() {
  const dataFiles = [
    'backend/server_data.json',
    'backend/uploads/avatars',
    'uploads/avatars'
  ];
  
  dataFiles.forEach(filePath => {
    const fullPath = path.join(__dirname, filePath);
    
    try {
      if (fs.existsSync(fullPath)) {
        if (fs.statSync(fullPath).isDirectory()) {
          // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          const files = fs.readdirSync(fullPath);
          files.forEach(file => {
            const fileFullPath = path.join(fullPath, file);
            fs.unlinkSync(fileFullPath);
            console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${file}`);
          });
          console.log(`‚úÖ –û—á–∏—â–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${filePath}`);
        } else {
          // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
          fs.unlinkSync(fullPath);
          console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
        }
      } else {
        console.log(`‚ÑπÔ∏è  –§–∞–π–ª/–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${filePath}`);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${filePath}:`, error.message);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö
function createEmptyServerData() {
  const serverDataFile = path.join(__dirname, 'backend', 'server_data.json');
  const emptyData = {
    teacherProfiles: {},
    studentProfiles: {},
    overbookingRequests: [],
    timeSlots: [],
    lessons: [],
    chats: [],
    posts: [],
    notifications: []
  };
  
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const backendDir = path.dirname(serverDataFile);
    if (!fs.existsSync(backendDir)) {
      fs.mkdirSync(backendDir, { recursive: true });
    }
    
    fs.writeFileSync(serverDataFile, JSON.stringify(emptyData, null, 2));
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª server_data.json');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ server_data.json:', error.message);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');
  
  // 1. –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞
  console.log('1Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞...');
  clearServerData();
  
  // 2. –û—á–∏—â–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('\n2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö...');
  clearAllDataFiles();
  
  // 3. –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö
  console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö...');
  createEmptyServerData();
  
  // 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—á–∏—Å—Ç–∫–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  console.log('\n4Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
  clearLocalStorage();
  
  console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
  console.log('   ‚úÖ –û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ (server_data.json)');
  console.log('   ‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ñ–∞–π–ª—ã –∞–≤–∞—Ç–∞—Ä–æ–≤');
  console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö');
  console.log('   üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—á–∏—Å—Ç–∫–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã');
  
  console.log('\nüîÑ –î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–∫–∂–µ:');
  console.log('   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä');
  console.log('   2. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞');
  console.log('   3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—á–∏—Å—Ç–∫–µ localStorage');
  
  console.log('\n‚ú® –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å —á–∏—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
