import React, { useState, useEffect } from 'react';
import { Search, Filter, Star, Users, MapPin, BookOpen, RefreshCw, Wifi, WifiOff, Heart, MoreHorizontal, Calendar as CalendarIcon, TrendingUp, Award, Clock, User, BookOpen as BookOpenIcon, MessageCircle, BarChart3, Trophy, Lightbulb } from 'lucide-react';
import { useData } from '../../contexts/DataContext';
import { useAuth } from '../../contexts/AuthContext';
import { FilterOptions, TimeSlot, User as UserType } from '../../types';
import TeacherProfilePage from './TeacherProfilePage';
import StudentCalendar from './StudentCalendar';
import BookingModal from '../Shared/BookingModal';
import TeacherSearch from './TeacherSearch';
import Analytics from '../Shared/Analytics';
import LessonsList from '../Shared/LessonsList';
import UserProfile from '../Shared/UserProfile';
import Achievements from '../Shared/Achievements';
import Recommendations from '../Shared/Recommendations';
import QuickActions from '../Shared/QuickActions';

const StudentHome: React.FC = () => {
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
  let dataContext = null;
  let authContext = null;
  
  try {
    dataContext = useData();
  } catch (error) {
    console.warn('DataContext not available yet');
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      </div>
    );
  }
  
  try {
    authContext = useAuth();
  } catch (error) {
    console.warn('AuthContext not available yet');
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</p>
        </div>
      </div>
    );
  }

  const { getFilteredSlots, bookLesson, timeSlots, lessons, isConnected } = dataContext;
  const { user } = authContext;
  
  const [filters, setFilters] = useState<FilterOptions>({});
  const [showFilters, setShowFilters] = useState(false);
  const [filteredSlots, setFilteredSlots] = useState<TimeSlot[]>([]);
  const [loading, setLoading] = useState(false);
  const [showOverbookingModal, setShowOverbookingModal] = useState(false);
  const [overbookingData, setOverbookingData] = useState({
    grade: '',
    subject: '',
    goals: [] as string[],
    experience: '',
    duration: 60,
    format: 'online',
    city: '',
    date: '',
    startTime: '',
    comment: '',
  });
  const [showBookingModal, setShowBookingModal] = useState(false);
  const [selectedBookingSlot, setSelectedBookingSlot] = useState<TimeSlot | null>(null);
  const [showCalendar, setShowCalendar] = useState(false);
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [selectedTimeRange, setSelectedTimeRange] = useState<{ start: string; end: string } | null>(null);
  const [showTeacherSearch, setShowTeacherSearch] = useState(false);
  const [selectedTeacher, setSelectedTeacher] = useState<UserType | null>(null);
  const [showAnalytics, setShowAnalytics] = useState(false);
  const [showLessonsList, setShowLessonsList] = useState(false);
  const [showProfile, setShowProfile] = useState(false);
  const [showAchievements, setShowAchievements] = useState(false);
  const [showRecommendations, setShowRecommendations] = useState(false);

  const subjects = ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è', '–ò—Å—Ç–æ—Ä–∏—è', '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'];
  const grades = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '–°—Ç—É–¥–µ–Ω—Ç', '–í–∑—Ä–æ—Å–ª—ã–π'];
  const goals = ['–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º', '–ø–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º', '—É–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ', '—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞'];
  const experiences = ['beginner', 'experienced', 'professional'];
  const formats = ['online', 'offline', 'mini-group'];
  const durations = [45, 60, 90, 120];

  const { allUsers } = dataContext;
  const [serverTeachers, setServerTeachers] = useState<UserType[]>([]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –≤—ã–∑–æ–≤
    setServerTeachers(allUsers.filter(u => u.role === 'teacher'));
  }, [allUsers]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
  const loadAvailableSlots = () => {
    console.log('StudentHome: Loading available slots...');
    setLoading(true);
    
    setTimeout(() => {
      const filtered = getFilteredSlots(filters);
      setFilteredSlots(filtered);
      setLoading(false);
    }, 500);
  };

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    loadAvailableSlots();
  }, [filters]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞
  const handleBookLesson = (slot: TimeSlot) => {
    setSelectedBookingSlot(slot);
    setShowBookingModal(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleConfirmBooking = async (comment: string) => {
    if (user && selectedBookingSlot) {
      try {
        await bookLesson(selectedBookingSlot.id, user.id, user.name, comment);
        setShowBookingModal(false);
        setSelectedBookingSlot(null);
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–æ—Ç—ã
        loadAvailableSlots();
      } catch (error) {
        console.error('Error booking lesson:', error);
      }
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (key: keyof FilterOptions, value: any) => {
    setFilters(prev => ({
      ...prev,
      [key]: value
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleResetFilters = () => {
    setFilters({});
    setSelectedDate(null);
    setSelectedTimeRange(null);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  const handleTeacherSelect = (teacher: UserType) => {
    setSelectedTeacher(teacher);
    setShowTeacherSearch(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞ —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  const handleBookLessonWithTeacher = (slot: TimeSlot) => {
    setSelectedBookingSlot(slot);
    setShowBookingModal(true);
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const getStats = () => {
    const totalSlots = filteredSlots.length;
    const onlineSlots = filteredSlots.filter(s => s.format === 'online').length;
    const offlineSlots = filteredSlots.filter(s => s.format === 'offline').length;
    const averagePrice = totalSlots > 0 
      ? Math.round(filteredSlots.reduce((sum, s) => sum + s.price, 0) / totalSlots)
      : 0;

    return { totalSlots, onlineSlots, offlineSlots, averagePrice };
  };

  const stats = getStats();

  return (
    <div className="space-y-8 animate-fade-in-up">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.name}! üëã
        </h1>
        <p className="text-xl text-gray-600 mb-6">
          –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π
        </p>
        
        {/* –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
        <div className="inline-flex items-center space-x-2 px-4 py-2 rounded-full bg-gray-100 text-gray-700">
          {isConnected ? (
            <>
              <Wifi className="h-4 w-4 text-green-500" />
              <span className="text-sm font-medium">–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É</span>
            </>
          ) : (
            <>
              <WifiOff className="h-4 w-4 text-red-500" />
              <span className="text-sm font-medium">–†–∞–±–æ—Ç–∞–µ–º –æ—Ñ–ª–∞–π–Ω</span>
            </>
          )}
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.totalSlots}</div>
              <div className="text-blue-100">–î–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</div>
            </div>
            <BookOpen className="h-12 w-12 text-blue-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-green-500 to-green-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.onlineSlots}</div>
              <div className="text-green-100">–û–Ω–ª–∞–π–Ω —É—Ä–æ–∫–æ–≤</div>
            </div>
            <Wifi className="h-12 w-12 text-green-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-purple-500 to-purple-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.offlineSlots}</div>
              <div className="text-purple-100">–û—á–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</div>
            </div>
            <MapPin className="h-12 w-12 text-purple-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-orange-500 to-orange-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.averagePrice}‚ÇΩ</div>
              <div className="text-orange-100">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
            </div>
            <TrendingUp className="h-12 w-12 text-orange-200" />
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6">
        <QuickActions
          userRole="student"
          onAction={(action) => {
            switch (action) {
              case 'book-lesson':
                setShowTeacherSearch(true);
                break;
              case 'find-teacher':
                setShowTeacherSearch(true);
                break;
              case 'schedule':
                setShowLessonsList(true);
                break;
              case 'messages':
                // TODO: –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç—ã
                console.log('Open messages');
                break;
              case 'goals':
                setShowProfile(true);
                break;
              case 'progress':
                setShowAnalytics(true);
                break;
              default:
                console.log('Action:', action);
            }
          }}
        />
      </div>

      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6">
        <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="relative flex-1 max-w-md">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é..."
              className="w-full pl-10 pr-4 py-3 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex items-center space-x-3">
            <button
              onClick={() => setShowRecommendations(!showRecommendations)}
              className="flex items-center space-x-2 px-4 py-3 bg-teal-100 text-teal-700 rounded-2xl hover:bg-teal-200 transition-all duration-200 hover:scale-105"
            >
              <Lightbulb className="h-5 w-5" />
              <span>{showRecommendations ? '–°–∫—Ä—ã—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏' : '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}</span>
            </button>
            
            <button
              onClick={() => setShowAchievements(!showAchievements)}
              className="flex items-center space-x-2 px-4 py-3 bg-yellow-100 text-yellow-700 rounded-2xl hover:bg-yellow-200 transition-all duration-200 hover:scale-105"
            >
              <Trophy className="h-5 w-5" />
              <span>{showAchievements ? '–°–∫—Ä—ã—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è' : '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è'}</span>
            </button>
            
            <button
              onClick={() => setShowProfile(!showProfile)}
              className="flex items-center space-x-2 px-4 py-3 bg-rose-100 text-rose-700 rounded-2xl hover:bg-rose-200 transition-all duration-200 hover:scale-105"
            >
              <User className="h-5 w-5" />
              <span>{showProfile ? '–°–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' : '–ü—Ä–æ—Ñ–∏–ª—å'}</span>
            </button>
            
            <button
              onClick={() => setShowLessonsList(!showLessonsList)}
              className="flex items-center space-x-2 px-4 py-3 bg-indigo-100 text-indigo-700 rounded-2xl hover:bg-indigo-200 transition-all duration-200 hover:scale-105"
            >
              <BookOpen className="h-5 w-5" />
              <span>{showLessonsList ? '–°–∫—Ä—ã—Ç—å —É—Ä–æ–∫–∏' : '–ú–æ–∏ —É—Ä–æ–∫–∏'}</span>
            </button>
            
            <button
              onClick={() => setShowAnalytics(!showAnalytics)}
              className="flex items-center space-x-2 px-4 py-3 bg-emerald-100 text-emerald-700 rounded-2xl hover:bg-emerald-200 transition-all duration-200 hover:scale-105"
            >
              <BarChart3 className="h-5 w-5" />
              <span>{showAnalytics ? '–°–∫—Ä—ã—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É' : '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞'}</span>
            </button>
            
            <button
              onClick={() => setShowTeacherSearch(!showTeacherSearch)}
              className="flex items-center space-x-2 px-4 py-3 bg-purple-100 text-purple-700 rounded-2xl hover:bg-purple-200 transition-all duration-200 hover:scale-105"
            >
              <Users className="h-5 w-5" />
              <span>{showTeacherSearch ? '–°–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫' : '–ù–∞–π—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'}</span>
            </button>
            
            <button
              onClick={() => setShowFilters(!showFilters)}
              className="flex items-center space-x-2 px-4 py-3 bg-gray-100 text-gray-700 rounded-2xl hover:bg-gray-200 transition-all duration-200 hover:scale-105"
            >
              <Filter className="h-5 w-5" />
              <span>–§–∏–ª—å—Ç—Ä—ã</span>
            </button>
            
            <button
              onClick={loadAvailableSlots}
              disabled={loading}
              className="flex items-center space-x-2 px-4 py-3 bg-blue-600 text-white rounded-2xl hover:bg-blue-700 disabled:opacity-200 hover:scale-105"
            >
              <RefreshCw className={`h-5 w-5 ${loading ? 'animate-spin' : ''}`} />
              <span>{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å'}</span>
            </button>
          </div>
        </div>

        {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
        {showFilters && (
          <div className="mt-6 p-6 bg-gray-50 rounded-2xl space-y-6 animate-slide-in-top">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              {/* –ü—Ä–µ–¥–º–µ—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ü—Ä–µ–¥–º–µ—Ç</label>
                <select
                  value={filters.subject || ''}
                  onChange={(e) => handleFilterChange('subject', e.target.value || undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã</option>
                  {subjects.map(subject => (
                    <option key={subject} value={subject}>{subject}</option>
                  ))}
                </select>
              </div>

              {/* –ö–ª–∞—Å—Å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ö–ª–∞—Å—Å</label>
                <select
                  value={filters.grade || ''}
                  onChange={(e) => handleFilterChange('grade', e.target.value || undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–í—Å–µ –∫–ª–∞—Å—Å—ã</option>
                  {grades.map(grade => (
                    <option key={grade} value={grade}>{grade}</option>
                  ))}
                </select>
              </div>

              {/* –û–ø—ã—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–û–ø—ã—Ç</label>
                <select
                  value={filters.experience || ''}
                  onChange={(e) => handleFilterChange('experience', e.target.value || undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–æ–π –æ–ø—ã—Ç</option>
                  <option value="beginner">–ù–∞—á–∏–Ω–∞—é—â–∏–π</option>
                  <option value="experienced">–û–ø—ã—Ç–Ω—ã–π</option>
                  <option value="professional">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª</option>
                </select>
              </div>

              {/* –§–æ—Ä–º–∞—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–§–æ—Ä–º–∞—Ç</label>
                <select
                  value={filters.format || ''}
                  onChange={(e) => handleFilterChange('format', e.target.value || undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–æ–π —Ñ–æ—Ä–º–∞—Ç</option>
                  <option value="online">–û–Ω–ª–∞–π–Ω</option>
                  <option value="offline">–û—á–Ω–æ</option>
                  <option value="mini-group">–ú–∏–Ω–∏-–≥—Ä—É–ø–ø–∞</option>
                </select>
              </div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω)</label>
                <select
                  value={filters.duration || ''}
                  onChange={(e) => handleFilterChange('duration', e.target.value ? parseInt(e.target.value) : undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–∞—è</option>
                  {durations.map(duration => (
                    <option key={duration} value={duration}>{duration}</option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥</label>
                <select
                  value={filters.minRating || ''}
                  onChange={(e) => handleFilterChange('minRating', e.target.value ? parseInt(e.target.value) : undefined)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–æ–π</option>
                  <option value="4">4+ –∑–≤–µ–∑–¥—ã</option>
                  <option value="4.5">4.5+ –∑–≤–µ–∑–¥—ã</option>
                  <option value="5">5 –∑–≤–µ–∑–¥</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ì–æ—Ä–æ–¥</label>
                <input
                  type="text"
                  value={filters.city || ''}
                  onChange={(e) => handleFilterChange('city', e.target.value || undefined)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥"
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                />
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ */}
            <div className="flex items-center justify-between pt-4 border-t border-gray-200">
              <button
                onClick={handleResetFilters}
                className="px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-xl transition-all duration-200"
              >
                –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
              
              <div className="text-sm text-gray-500">
                –ù–∞–π–¥–µ–Ω–æ: {filteredSlots.length} —É—Ä–æ–∫–æ–≤
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      {showRecommendations && user && (
        <div className="animate-slide-in-top">
          <Recommendations
            userId={user.id}
            userRole="student"
            timeSlots={timeSlots}
            lessons={lessons}
            allUsers={allUsers}
          />
        </div>
      )}

      {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
      {showAchievements && user && (
        <div className="animate-slide-in-top">
          <Achievements
            userId={user.id}
            achievements={[
              {
                id: '1',
                title: '–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫',
                description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫',
                icon: 'üéØ',
                category: 'academic',
                points: 50,
                isUnlocked: true,
                unlockedAt: new Date().toISOString(),
                userId: user.id
              },
              {
                id: '2',
                title: '–ù–µ–¥–µ–ª—è –æ–±—É—á–µ–Ω–∏—è',
                description: '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
                icon: 'üî•',
                category: 'participation',
                points: 100,
                isUnlocked: false,
                userId: user.id
              },
              {
                id: '3',
                title: '–û—Ç–ª–∏—á–Ω–∏–∫',
                description: '–ü–æ–ª—É—á–∏—Ç–µ 5 –∑–≤–µ–∑–¥ –∑–∞ —É—Ä–æ–∫',
                icon: '‚≠ê',
                category: 'excellence',
                points: 200,
                isUnlocked: false,
                userId: user.id
              }
            ]}
            currentLevel={2}
            currentPoints={150}
            totalPoints={150}
            streak={3}
            rank={25}
          />
        </div>
      )}

      {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {showProfile && user && (
        <div className="animate-slide-in-top">
          <UserProfile
            user={user}
            isEditable={true}
            onProfileUpdate={async (updatedProfile) => {
              // TODO: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ API
              console.log('Profile updated:', updatedProfile);
            }}
          />
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ */}
      {showLessonsList && user && (
        <div className="animate-slide-in-top">
          <LessonsList
            lessons={lessons.filter(l => l.studentId === user.id)}
            timeSlots={timeSlots.filter(s => !s.isBooked)}
            userRole="student"
            onLessonClick={(lesson) => console.log('Lesson clicked:', lesson)}
            onBookLesson={handleBookLesson}
          />
        </div>
      )}

      {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
      {showAnalytics && user && (
        <div className="animate-slide-in-top">
          <Analytics userId={user.id} userRole="student" />
        </div>
      )}

      {/* –ü–æ–∏—Å–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π */}
      {showTeacherSearch && (
        <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6 animate-slide-in-top">
          <TeacherSearch
            onTeacherSelect={handleTeacherSelect}
            onBookLesson={handleBookLessonWithTeacher}
          />
        </div>
      )}

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h2 className="text-2xl font-bold text-gray-900">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏ ({filteredSlots.length})
          </h2>
          
          <div className="flex items-center space-x-3">
            <button
              onClick={() => setShowCalendar(!showCalendar)}
              className="flex items-center space-x-2 px-4 py-2 bg-purple-100 text-purple-700 rounded-2xl hover:bg-purple-200 transition-all duration-200 hover:scale-105"
            >
              <CalendarIcon className="h-5 w-5" />
              <span>{showCalendar ? '–°–ø–∏—Å–æ–∫' : '–ö–∞–ª–µ–Ω–¥–∞—Ä—å'}</span>
            </button>
          </div>
        </div>

        {loading ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[...Array(6)].map((_, i) => (
              <div key={i} className="bg-white rounded-3xl shadow-lg border border-gray-100 p-6 animate-pulse">
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gray-200 rounded-2xl"></div>
                    <div className="space-y-2">
                      <div className="h-4 bg-gray-200 rounded w-24"></div>
                      <div className="h-3 bg-gray-200 rounded w-32"></div>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="h-4 bg-gray-200 rounded w-full"></div>
                    <div className="h-4 bg-gray-200 rounded w-3/4"></div>
                  </div>
                  <div className="h-10 bg-gray-200 rounded-2xl"></div>
                </div>
              </div>
            ))}
          </div>
        ) : filteredSlots.length === 0 ? (
          <div className="text-center py-12">
            <BookOpen className="h-16 w-16 mx-auto text-gray-300 mb-4" />
            <h3 className="text-xl font-semibold text-gray-600 mb-2">–£—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-500 mb-6">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ–ª—å—à–µ —É—Ä–æ–∫–æ–≤
            </p>
            <button
              onClick={loadAvailableSlots}
              className="px-6 py-3 bg-blue-600 text-white rounded-2xl hover:bg-blue-700 transition-all duration-200 hover:scale-105"
            >
              –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫
            </button>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredSlots.map((slot, index) => (
              <div
                key={slot.id}
                className="bg-white rounded-3xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300 hover:scale-105 animate-fade-in-up"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
                <div className="flex items-start justify-between mb-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center">
                      <BookOpen className="h-6 w-6 text-white" />
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-900">{slot.subject}</h3>
                      <p className="text-sm text-gray-600">{slot.teacherName}</p>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-1">
                    {slot.rating && (
                      <>
                        <Star className="h-4 w-4 text-yellow-400 fill-current" />
                        <span className="text-sm font-medium text-gray-700">{slot.rating}</span>
                      </>
                    )}
                  </div>
                </div>

                {/* –î–µ—Ç–∞–ª–∏ —É—Ä–æ–∫–∞ */}
                <div className="space-y-3 mb-4">
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <Clock className="h-4 w-4" />
                    <span>{slot.startTime} - {slot.endTime}</span>
                  </div>
                  
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <MapPin className="h-4 w-4" />
                    <span>{slot.format === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—á–Ω–æ'}</span>
                  </div>
                  
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <User className="h-4 w-4" />
                    <span>{slot.experience === 'beginner' ? '–ù–∞—á–∏–Ω–∞—é—â–∏–π' : 
                           slot.experience === 'experienced' ? '–û–ø—ã—Ç–Ω—ã–π' : '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª'}</span>
                  </div>
                </div>

                {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
                <div className="flex items-center justify-between">
                  <div className="text-2xl font-bold text-blue-600">
                    {slot.price} ‚ÇΩ
                  </div>
                  
                  <button
                    onClick={() => handleBookLesson(slot)}
                    className="px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl hover:from-blue-700 hover:to-purple-700 transition-all duration-200 hover:scale-105 shadow-lg"
                  >
                    –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {showBookingModal && selectedBookingSlot && (
        <BookingModal
          isOpen={showBookingModal}
          onClose={() => setShowBookingModal(false)}
          onConfirm={handleConfirmBooking}
          slot={selectedBookingSlot}
          teacher={{ name: selectedBookingSlot.teacherName, avatar: selectedBookingSlot.teacherAvatar }}
          student={user}
        />
      )}
    </div>
  );
};

export default StudentHome;