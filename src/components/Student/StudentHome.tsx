import React, { useState, useEffect } from 'react';
import { Search, Filter, Star, Users, MapPin, BookOpen, RefreshCw, Wifi, WifiOff, Heart, MoreHorizontal, Calendar as CalendarIcon, TrendingUp, Award, Clock, User, BookOpen as BookOpenIcon, MessageCircle, BarChart3, Trophy, Lightbulb } from 'lucide-react';

const StudentHome: React.FC = () => {
  const [filters, setFilters] = useState({});
  const [showFilters, setShowFilters] = useState(false);
  const [loading, setLoading] = useState(false);
  const [showLessonsList, setShowLessonsList] = useState(false);

  // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
  const demoTimeSlots = [
    {
      id: 'slot_1',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      teacherName: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      teacherAvatar: 'https://via.placeholder.com/40',
      date: '2024-01-15',
      startTime: '14:00',
      endTime: '15:00',
      duration: 60,
      format: 'online',
      price: 1500,
      experience: 'experienced',
      rating: 4.8,
      isBooked: false
    },
    {
      id: 'slot_2',
      subject: '–§–∏–∑–∏–∫–∞',
      teacherName: '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
      teacherAvatar: 'https://via.placeholder.com/40',
      date: '2024-01-16',
      startTime: '16:00',
      endTime: '17:00',
      duration: 60,
      format: 'online',
      price: 1800,
      experience: 'professional',
      rating: 4.9,
      isBooked: false
    }
  ];

  const demoLessons = [
    {
      id: 'lesson_1',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      teacherName: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
      date: '2024-01-10',
      startTime: '15:00',
      endTime: '16:00',
      format: 'online',
      status: 'completed',
      price: 1500,
      duration: 60
    }
  ];

  const subjects = ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è', '–ò—Å—Ç–æ—Ä–∏—è', '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'];
  const grades = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '–°—Ç—É–¥–µ–Ω—Ç', '–í–∑—Ä–æ—Å–ª—ã–π'];
  const goals = ['–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º', '–ø–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º', '—É–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ', '—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞'];
  const experiences = ['beginner', 'experienced', 'professional'];
  const formats = ['online', 'offline', 'mini-group'];
  const durations = [45, 60, 90, 120];

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
  const user = JSON.parse(localStorage.getItem('tutoring_currentUser') || '{}');

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
  const loadAvailableSlots = () => {
    console.log('StudentHome: Loading available slots...');
    setLoading(true);
    
    setTimeout(() => {
      setLoading(false);
    }, 500);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞
  const handleBookLesson = (slot: any) => {
    alert(`–£—Ä–æ–∫ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É "${slot.subject}" –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω!`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (key: string, value: any) => {
    setFilters(prev => ({
      ...prev,
      [key]: value
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleResetFilters = () => {
    setFilters({});
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const getStats = () => {
    return {
      totalSlots: demoTimeSlots.length,
      onlineSlots: demoTimeSlots.filter(s => s.format === 'online').length,
      offlineSlots: demoTimeSlots.filter(s => s.format === 'offline').length,
      averagePrice: Math.round(demoTimeSlots.reduce((sum, s) => sum + s.price, 0) / demoTimeSlots.length)
    };
  };

  const stats = getStats();

  return (
    <div className="space-y-8 animate-fade-in-up">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.name || '–£—á–µ–Ω–∏–∫'}! üëã
        </h1>
        <p className="text-xl text-gray-600 mb-6">
          –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π
        </p>
        
        {/* –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
        <div className="inline-flex items-center space-x-2 px-4 py-2 rounded-full bg-gray-100 text-gray-700">
          <Wifi className="h-4 w-4 text-green-500" />
          <span className="text-sm font-medium">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ</span>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.totalSlots}</div>
              <div className="text-blue-100">–î–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</div>
            </div>
            <BookOpen className="h-12 w-12 text-blue-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-green-500 to-green-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.onlineSlots}</div>
              <div className="text-green-100">–û–Ω–ª–∞–π–Ω —É—Ä–æ–∫–æ–≤</div>
            </div>
            <Wifi className="h-12 w-12 text-green-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-purple-500 to-purple-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.offlineSlots}</div>
              <div className="text-purple-100">–û—á–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</div>
            </div>
            <MapPin className="h-12 w-12 text-purple-200" />
          </div>
        </div>

        <div className="bg-gradient-to-br from-orange-500 to-orange-600 rounded-3xl p-6 text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">{stats.averagePrice}‚ÇΩ</div>
              <div className="text-orange-100">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
            </div>
            <TrendingUp className="h-12 w-12 text-orange-200" />
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-6">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => setShowLessonsList(!showLessonsList)}
            className="flex items-center space-x-3 p-4 bg-blue-50 text-blue-700 rounded-2xl hover:bg-blue-100 transition-all duration-200 hover:scale-105"
          >
            <BookOpen className="h-6 w-6" />
            <span className="font-medium">–ú–æ–∏ —É—Ä–æ–∫–∏</span>
          </button>
          
          <button
            className="flex items-center space-x-3 p-4 bg-green-50 text-green-700 rounded-2xl hover:bg-green-100 transition-all duration-200 hover:scale-105"
          >
            <Users className="h-6 w-6" />
            <span className="font-medium">–ù–∞–π—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</span>
          </button>
          
          <button
            className="flex items-center space-x-3 p-4 bg-purple-50 text-purple-700 rounded-2xl hover:bg-purple-100 transition-all duration-200 hover:scale-105"
          >
            <CalendarIcon className="h-6 w-6" />
            <span className="font-medium">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</span>
          </button>
        </div>
      </div>

      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6">
        <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="relative flex-1 max-w-md">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é..."
              className="w-full pl-10 pr-4 py-3 border-2 border-gray-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex items-center space-x-3">
            <button
              onClick={() => setShowFilters(!showFilters)}
              className="flex items-center space-x-2 px-4 py-3 bg-gray-100 text-gray-700 rounded-2xl hover:bg-gray-200 transition-all duration-200 hover:scale-105"
            >
              <Filter className="h-5 w-5" />
              <span>–§–∏–ª—å—Ç—Ä—ã</span>
            </button>
            
            <button
              onClick={loadAvailableSlots}
              disabled={loading}
              className="flex items-center space-x-2 px-4 py-3 bg-blue-600 text-white rounded-2xl hover:bg-blue-700 disabled:opacity-200 hover:scale-105"
            >
              <RefreshCw className={`h-5 w-5 ${loading ? 'animate-spin' : ''}`} />
              <span>{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å'}</span>
            </button>
          </div>
        </div>

        {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
        {showFilters && (
          <div className="mt-6 p-6 bg-gray-50 rounded-2xl space-y-6 animate-slide-in-top">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              {/* –ü—Ä–µ–¥–º–µ—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ü—Ä–µ–¥–º–µ—Ç</label>
                <select
                  onChange={(e) => handleFilterChange('subject', e.target.value)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã</option>
                  {subjects.map(subject => (
                    <option key={subject} value={subject}>{subject}</option>
                  ))}
                </select>
              </div>

              {/* –ö–ª–∞—Å—Å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ö–ª–∞—Å—Å</label>
                <select
                  onChange={(e) => handleFilterChange('grade', e.target.value)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–í—Å–µ –∫–ª–∞—Å—Å—ã</option>
                  {grades.map(grade => (
                    <option key={grade} value={grade}>{grade}</option>
                  ))}
                </select>
              </div>

              {/* –û–ø—ã—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–û–ø—ã—Ç</label>
                <select
                  onChange={(e) => handleFilterChange('experience', e.target.value)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–æ–π –æ–ø—ã—Ç</option>
                  <option value="beginner">–ù–∞—á–∏–Ω–∞—é—â–∏–π</option>
                  <option value="experienced">–û–ø—ã—Ç–Ω—ã–π</option>
                  <option value="professional">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª</option>
                </select>
              </div>

              {/* –§–æ—Ä–º–∞—Ç */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–§–æ—Ä–º–∞—Ç</label>
                <select
                  onChange={(e) => handleFilterChange('format', e.target.value)}
                  className="w-full px-3 py-2 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                >
                  <option value="">–õ—é–±–æ–π —Ñ–æ—Ä–º–∞—Ç</option>
                  <option value="online">–û–Ω–ª–∞–π–Ω</option>
                  <option value="offline">–û—á–Ω–æ</option>
                  <option value="mini-group">–ú–∏–Ω–∏-–≥—Ä—É–ø–ø–∞</option>
                </select>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ */}
            <div className="flex items-center justify-between pt-4 border-t border-gray-200">
              <button
                onClick={handleResetFilters}
                className="px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-xl transition-all duration-200"
              >
                –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
              
              <div className="text-sm text-gray-500">
                –ù–∞–π–¥–µ–Ω–æ: {demoTimeSlots.length} —É—Ä–æ–∫–æ–≤
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ */}
      {showLessonsList && (
        <div className="bg-white rounded-3xl shadow-xl border border-gray-100 p-6 animate-slide-in-top">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">–ú–æ–∏ —É—Ä–æ–∫–∏</h2>
          
          {/* –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∏ */}
          <div className="mb-8">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∏</h3>
            {demoLessons.filter(l => l.status === 'scheduled').length === 0 ? (
              <div className="text-center py-8">
                <BookOpen className="h-16 w-16 mx-auto text-gray-300 mb-4" />
                <p className="text-gray-600 mb-2">–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</p>
                <p className="text-gray-500 text-sm">–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —É—Ä–æ–∫ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
              </div>
            ) : (
              <div className="space-y-4">
                {demoLessons.filter(l => l.status === 'scheduled').map(lesson => (
                  <div key={lesson.id} className="flex items-center justify-between p-4 bg-blue-50 rounded-2xl">
                    <div className="flex items-center space-x-4">
                      <div className="w-12 h-12 bg-blue-500 rounded-2xl flex items-center justify-center">
                        <BookOpen className="h-6 w-6 text-white" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900">{lesson.subject}</h4>
                        <p className="text-sm text-gray-600">{lesson.teacherName}</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-semibold text-gray-900">{lesson.date} {lesson.startTime}</p>
                      <p className="text-sm text-gray-600">{lesson.format === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—á–Ω–æ'}</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏ */}
          <div>
            <h3 className="text-xl font-semibold text-gray-900 mb-4">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏</h3>
            {demoLessons.filter(l => l.status === 'completed').length === 0 ? (
              <div className="text-center py-8">
                <Clock className="h-16 w-16 mx-auto text-gray-300 mb-4" />
                <p className="text-gray-600 mb-2">–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</p>
                <p className="text-gray-500 text-sm">–í–∞—à–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å</p>
              </div>
            ) : (
              <div className="space-y-4">
                {demoLessons.filter(l => l.status === 'completed').map(lesson => (
                  <div key={lesson.id} className="flex items-center justify-between p-4 bg-green-50 rounded-2xl">
                    <div className="flex items-center space-x-4">
                      <div className="w-12 h-12 bg-green-500 rounded-2xl flex items-center justify-center">
                        <BookOpen className="h-6 w-6 text-white" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-gray-900">{lesson.subject}</h4>
                        <p className="text-sm text-gray-600">{lesson.teacherName}</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-semibold text-gray-900">{lesson.date} {lesson.startTime}</p>
                      <p className="text-sm text-gray-600">{lesson.format === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—á–Ω–æ'}</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      )}

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h2 className="text-2xl font-bold text-gray-900">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏ ({demoTimeSlots.length})
          </h2>
        </div>

        {loading ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[...Array(6)].map((_, i) => (
              <div key={i} className="bg-white rounded-3xl shadow-lg border border-gray-100 p-6 animate-pulse">
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gray-200 rounded-2xl"></div>
                    <div className="space-y-2">
                      <div className="h-4 bg-gray-200 rounded w-24"></div>
                      <div className="h-3 bg-gray-200 rounded w-32"></div>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="h-4 bg-gray-200 rounded w-full"></div>
                    <div className="h-4 bg-gray-200 rounded w-3/4"></div>
                  </div>
                  <div className="h-10 bg-gray-200 rounded-2xl"></div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {demoTimeSlots.map((slot, index) => (
              <div
                key={slot.id}
                className="bg-white rounded-3xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300 hover:scale-105 animate-fade-in-up"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
                <div className="flex items-start justify-between mb-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center">
                      <BookOpen className="h-6 w-6 text-white" />
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-900">{slot.subject}</h3>
                      <p className="text-sm text-gray-600">{slot.teacherName}</p>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-1">
                    {slot.rating && (
                      <>
                        <Star className="h-4 w-4 text-yellow-400 fill-current" />
                        <span className="text-sm font-medium text-gray-700">{slot.rating}</span>
                      </>
                    )}
                  </div>
                </div>

                {/* –î–µ—Ç–∞–ª–∏ —É—Ä–æ–∫–∞ */}
                <div className="space-y-3 mb-4">
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <CalendarIcon className="h-4 w-4" />
                    <span>{slot.date} {slot.startTime} - {slot.endTime}</span>
                  </div>
                  
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <MapPin className="h-4 w-4" />
                    <span>{slot.format === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—á–Ω–æ'}</span>
                  </div>
                  
                  <div className="flex items-center space-x-2 text-sm text-gray-600">
                    <User className="h-4 w-4" />
                    <span>{slot.experience === 'beginner' ? '–ù–∞—á–∏–Ω–∞—é—â–∏–π' : 
                           slot.experience === 'experienced' ? '–û–ø—ã—Ç–Ω—ã–π' : '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª'}</span>
                  </div>
                </div>

                {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
                <div className="flex items-center justify-between">
                  <div className="text-2xl font-bold text-blue-600">
                    {slot.price} ‚ÇΩ
                  </div>
                  
                  <button
                    onClick={() => handleBookLesson(slot)}
                    className="px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl hover:from-blue-700 hover:to-purple-700 transition-all duration-200 hover:scale-105 shadow-lg"
                  >
                    –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default StudentHome;