#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ NAUCHI –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ NAUCHI –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
CHECKS_PASSED=0
CHECKS_TOTAL=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_item() {
    CHECKS_TOTAL=$((CHECKS_TOTAL + 1))
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
        CHECKS_PASSED=$((CHECKS_PASSED + 1))
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

echo -e "${BLUE}================================${NC}"
echo -e "${BLUE}üîç –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò NAUCHI${NC}"
echo -e "${BLUE}================================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ù–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
[ -f "package.json" ] && check_item 0 "package.json –Ω–∞–π–¥–µ–Ω" || check_item 1 "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
[ -f "render.yaml" ] && check_item 0 "render.yaml –Ω–∞–π–¥–µ–Ω" || check_item 1 "render.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
[ -f "backend/production-server.cjs" ] && check_item 0 "production-server.cjs –Ω–∞–π–¥–µ–Ω" || check_item 1 "production-server.cjs –Ω–µ –Ω–∞–π–¥–µ–Ω"
[ -f "src/App.tsx" ] && check_item 0 "App.tsx –Ω–∞–π–¥–µ–Ω" || check_item 1 "App.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Git
echo -e "\n${YELLOW}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Git:${NC}"
git config --get user.name > /dev/null 2>&1 && check_item 0 "Git –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "Git –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
git config --get user.email > /dev/null 2>&1 && check_item 0 "Git email –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "Git email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
git remote get-url origin > /dev/null 2>&1 && check_item 0 "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo -e "\n${YELLOW}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:${NC}"
CURRENT_BRANCH=$(git branch --show-current)
echo -e "${BLUE}üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: ${CURRENT_BRANCH}${NC}"
[ "$CURRENT_BRANCH" = "main" ] && check_item 0 "–ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –≤–µ—Ç–∫–µ main" || check_item 1 "–ù–ï –Ω–∞ –≤–µ—Ç–∫–µ main (—Ç–µ–∫—É—â–∞—è: $CURRENT_BRANCH)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo -e "\n${YELLOW}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:${NC}"
[ -f "package-lock.json" ] && check_item 0 "package-lock.json –Ω–∞–π–¥–µ–Ω" || check_item 1 "package-lock.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
[ -d "node_modules" ] && check_item 0 "node_modules —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || check_item 1 "node_modules –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Render
echo -e "\n${YELLOW}‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Render:${NC}"
if [ -f "render.yaml" ]; then
    grep -q "name: nauchi\|name: tutoring-platform" render.yaml && check_item 0 "–ò–º—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" || check_item 1 "–ò–º—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
    grep -q "buildCommand:" render.yaml && check_item 0 "Build command –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "Build command –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    grep -q "startCommand:" render.yaml && check_item 0 "Start command –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "Start command –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    grep -q "healthCheckPath:" render.yaml && check_item 0 "Health check –Ω–∞—Å—Ç—Ä–æ–µ–Ω" || check_item 1 "Health check –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    check_item 1 "render.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –°–∫—Ä–∏–ø—Ç—ã –≤ package.json
echo -e "\n${YELLOW}üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤:${NC}"
if [ -f "package.json" ]; then
    grep -q '"build":' package.json && check_item 0 "–°–∫—Ä–∏–ø—Ç build –Ω–∞–π–¥–µ–Ω" || check_item 1 "–°–∫—Ä–∏–ø—Ç build –Ω–µ –Ω–∞–π–¥–µ–Ω"
    grep -q '"start":' package.json && check_item 0 "–°–∫—Ä–∏–ø—Ç start –Ω–∞–π–¥–µ–Ω" || check_item 1 "–°–∫—Ä–∏–ø—Ç start –Ω–µ –Ω–∞–π–¥–µ–Ω"
else
    check_item 1 "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: Backend —Å–µ—Ä–≤–µ—Ä
echo -e "\n${YELLOW}üñ•Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ backend —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
if [ -f "backend/production-server.cjs" ]; then
    grep -q "express" backend/production-server.cjs && check_item 0 "Express –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ä–≤–µ—Ä–µ" || check_item 1 "Express –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ä–≤–µ—Ä–µ"
    grep -q "socket.io" backend/production-server.cjs && check_item 0 "Socket.IO –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ä–≤–µ—Ä–µ" || check_item 1 "Socket.IO –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ä–≤–µ—Ä–µ"
    grep -q "PORT.*process.env.PORT" backend/production-server.cjs && check_item 0 "–ü–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è" || check_item 1 "–ü–æ—Ä—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è"
else
    check_item 1 "production-server.cjs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo -e "\n${BLUE}================================${NC}"
echo -e "${BLUE}üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò${NC}"
echo -e "${BLUE}================================${NC}"

if [ $CHECKS_PASSED -eq $CHECKS_TOTAL ]; then
    echo -e "${GREEN}üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! (${CHECKS_PASSED}/${CHECKS_TOTAL})${NC}"
    echo -e "${GREEN}‚úÖ NAUCHI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Render!${NC}"
    echo ""
    echo -e "${BLUE}üöÄ –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
    echo -e "${YELLOW}   ./scripts/deploy-nauchi.sh${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´ (${CHECKS_PASSED}/${CHECKS_TOTAL})${NC}"
    echo -e "${RED}‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º${NC}"
    echo ""
    echo -e "${BLUE}üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"
    
    if ! git config --get user.name > /dev/null 2>&1; then
        echo -e "${YELLOW}   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Git: git config --global user.name '–í–∞—à–µ –∏–º—è'${NC}"
    fi
    
    if ! git config --get user.email > /dev/null 2>&1; then
        echo -e "${YELLOW}   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Git email: git config --global user.email '–≤–∞—à@email.com'${NC}"
    fi
    
    if ! git remote get-url origin > /dev/null 2>&1; then
        echo -e "${YELLOW}   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: git remote add origin <URL>${NC}"
    fi
    
    if [ "$CURRENT_BRANCH" != "main" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ main: git checkout main${NC}"
    fi
    
    if [ ! -d "node_modules" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install${NC}"
    fi
    
    exit 1
fi
