#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 */

const fetch = require('node-fetch');

const SERVER_URL = process.env.SERVER_URL || 'http://localhost:3001';

async function testLocalDataUpload() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
  console.log(`üåê –°–µ—Ä–≤–µ—Ä: ${SERVER_URL}`);

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${SERVER_URL}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${healthResponse.status}`);
    }
    const healthData = await healthResponse.json();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω:', healthData.status);

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
    const teachersResponse = await fetch(`${SERVER_URL}/api/teachers`);
    if (!teachersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teachersResponse.status}`);
    }
    const currentTeachers = await teachersResponse.json();
    console.log(`üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${currentTeachers.length}`);

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const testTeacherId = `local-teacher-${Date.now()}`;
    const testStudentId = `local-student-${Date.now()}`;
    
    const localTeacherProfiles = {
      [testTeacherId]: {
        id: testTeacherId,
        email: `local-teacher-${Date.now()}@example.com`,
        name: '–õ–æ–∫–∞–ª—å–Ω—ã–π –†–µ–ø–µ—Ç–∏—Ç–æ—Ä',
        nickname: `local-teacher-${Date.now()}`,
        role: 'teacher',
        phone: '+7 (999) 123-45-67',
        subjects: ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞'],
        experience: 'experienced',
        grades: ['9', '10', '11'],
        goals: ['–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠', '–ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏'],
        lessonTypes: ['–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π', '–≥—Ä—É–ø–ø–æ–≤–æ–π'],
        durations: [60, 90],
        formats: ['online', 'offline'],
        offlineAvailable: true,
        city: '–ú–æ—Å–∫–≤–∞',
        overbookingEnabled: true,
        bio: '–û–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ —Ñ–∏–∑–∏–∫–∏',
        avatar: '',
        rating: 4.8,
        hourlyRate: 2000,
        age: 35,
        experienceYears: 10,
        education: {
          university: '–ú–ì–£',
          degree: '–ú–∞–≥–∏—Å—Ç—Ä',
          graduationYear: 2010,
          courses: ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞']
        },
        createdAt: new Date().toISOString()
      }
    };

    const localStudentProfiles = {
      [testStudentId]: {
        id: testStudentId,
        email: `local-student-${Date.now()}@example.com`,
        name: '–õ–æ–∫–∞–ª—å–Ω—ã–π –°—Ç—É–¥–µ–Ω—Ç',
        nickname: `local-student-${Date.now()}`,
        role: 'student',
        phone: '+7 (999) 987-65-43',
        grade: '10',
        bio: '–£—á–µ–Ω–∏–∫ 10 –∫–ª–∞—Å—Å–∞',
        avatar: '',
        subjects: ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞'],
        age: 16,
        school: '–®–∫–æ–ª–∞ ‚Ññ123',
        city: '–ú–æ—Å–∫–≤–∞',
        phone: '+7 (999) 987-65-43',
        parentName: '–†–æ–¥–∏—Ç–µ–ª—å –°—Ç—É–¥–µ–Ω—Ç–∞',
        parentPhone: '+7 (999) 987-65-44',
        goals: ['–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠', '–ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏'],
        interests: ['–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞'],
        learningStyle: 'visual',
        experience: 'beginner',
        preferredFormats: ['online'],
        preferredDurations: [60],
        timeZone: 'Europe/Moscow',
        createdAt: new Date().toISOString()
      }
    };

    const localUsers = [
      {
        id: testTeacherId,
        email: localTeacherProfiles[testTeacherId].email,
        name: localTeacherProfiles[testTeacherId].name,
        nickname: localTeacherProfiles[testTeacherId].nickname,
        role: 'teacher',
        phone: localTeacherProfiles[testTeacherId].phone,
        profile: localTeacherProfiles[testTeacherId]
      },
      {
        id: testStudentId,
        email: localStudentProfiles[testStudentId].email,
        name: localStudentProfiles[testStudentId].name,
        nickname: localStudentProfiles[testStudentId].nickname,
        role: 'student',
        phone: localStudentProfiles[testStudentId].phone,
        profile: localStudentProfiles[testStudentId]
      }
    ];

    console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log(`   üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏: ${Object.keys(localTeacherProfiles).length}`);
    console.log(`   üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç—ã: ${Object.keys(localStudentProfiles).length}`);
    console.log(`   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${localUsers.length}`);

    // 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('\n4Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
    const uploadResponse = await fetch(`${SERVER_URL}/api/upload-local-data`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        teacherProfiles: localTeacherProfiles,
        studentProfiles: localStudentProfiles,
        users: localUsers
      })
    });

    if (!uploadResponse.ok) {
      const errorData = await uploadResponse.json();
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${errorData.error}`);
    }

    const uploadResult = await uploadResponse.json();
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', uploadResult);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    const updatedTeachersResponse = await fetch(`${SERVER_URL}/api/teachers`);
    if (!updatedTeachersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${updatedTeachersResponse.status}`);
    }
    const updatedTeachers = await updatedTeachersResponse.json();
    console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${updatedTeachers.length}`);

    const foundTeacher = updatedTeachers.find(t => t.id === testTeacherId);
    if (foundTeacher) {
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
    } else {
      console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersResponse = await fetch(`${SERVER_URL}/api/users`);
    if (!usersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.status}`);
    }
    const allUsers = await usersResponse.json();
    
    const teacherUsers = allUsers.filter(u => u.role === 'teacher');
    const studentUsers = allUsers.filter(u => u.role === 'student');
    const foundTeacherUser = allUsers.find(u => u.id === testTeacherId);
    const foundStudentUser = allUsers.find(u => u.id === testStudentId);
    
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${allUsers.length}`);
    console.log(`üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teacherUsers.length}`);
    console.log(`üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${studentUsers.length}`);
    
    if (foundTeacherUser) {
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } else {
      console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }
    
    if (foundStudentUser) {
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } else {
      console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...');
    const syncResponse = await fetch(`${SERVER_URL}/api/sync`);
    if (!syncResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${syncResponse.status}`);
    }
    const syncData = await syncResponse.json();
    
    const teacherInSync = syncData.teacherProfiles && syncData.teacherProfiles[testTeacherId];
    const studentInSync = syncData.studentProfiles && syncData.studentProfiles[testStudentId];
    
    if (teacherInSync) {
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    } else {
      console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
    
    if (studentInSync) {
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    } else {
      console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: ‚úÖ`);
    console.log(`   ‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–≤—ã—Ö: ${uploadResult.uploaded}`);
    console.log(`   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: ${uploadResult.skipped}`);
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ /api/teachers: ${foundTeacher ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ /api/users: ${foundTeacherUser ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç –≤ /api/users: ${foundStudentUser ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${teacherInSync ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${studentInSync ? '‚úÖ' : '‚ùå'}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testLocalDataUpload();
