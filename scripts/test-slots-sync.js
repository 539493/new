#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ª–æ—Ç–æ–≤ –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
 * –ó–∞–ø—É—Å–∫: node scripts/test-slots-sync.js
 */

const io = require('socket.io-client');

const SERVER_URL = process.env.SERVER_URL || 'http://localhost:10000';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ª–æ—Ç–æ–≤...');
console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É: ${SERVER_URL}`);

// –°–æ–∑–¥–∞–µ–º –¥–≤–∞ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
const client1 = io(SERVER_URL);
const client2 = io(SERVER_URL);

let testResults = {
  connection: false,
  slotsLoaded: false,
  slotCreated: false,
  slotBooked: false,
  slotCancelled: false,
  slotDeleted: false
};

// –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
client1.on('connect', () => {
  console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç 1 –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
  client2.on('connect', () => {
    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
    testResults.connection = true;
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Å–µ —Å–ª–æ—Ç—ã
    client1.emit('requestAllSlots');
  });
});

// –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ—Ç–æ–≤
client1.on('allSlots', (slots) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 1 –ø–æ–ª—É—á–∏–ª —Å–ª–æ—Ç—ã:', slots.length);
  testResults.slotsLoaded = true;
  
  if (slots.length > 0) {
    console.log('‚úÖ –°–ª–æ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    
    // –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞
    console.log('üì§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞...');
    
    const testSlot = {
      id: `test_slot_${Date.now()}`,
      teacherId: 'teacher_1',
      teacherName: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      teacherAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400&h=400&fit=crop&crop=face',
      date: '2025-01-20',
      startTime: '15:00',
      endTime: '16:00',
      duration: 60,
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      lessonType: 'regular',
      format: 'online',
      price: 1500,
      isBooked: false,
      experience: 'experienced',
      goals: ['–ï–ì–≠', '–û–ì–≠'],
      grades: ['9', '10', '11'],
      rating: 4.8
    };
    
    client1.emit('createSlot', testSlot);
  }
});

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—Ç–∞
client2.on('slotCreated', (newSlot) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–π —Å–ª–æ—Ç:', newSlot.id);
  testResults.slotCreated = true;
  
  if (newSlot.id.includes('test_slot_')) {
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    
    // –¢–µ—Å—Ç 5: –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç–∞
    console.log('üì§ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞...');
    
    const testLesson = {
      id: `test_lesson_${Date.now()}`,
      studentId: 'student_1',
      teacherId: newSlot.teacherId,
      studentName: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤',
      teacherName: newSlot.teacherName,
      subject: newSlot.subject,
      date: newSlot.date,
      startTime: newSlot.startTime,
      endTime: newSlot.endTime,
      duration: newSlot.duration,
      format: newSlot.format,
      status: 'scheduled',
      price: newSlot.price,
      lessonType: newSlot.lessonType
    };
    
    client1.emit('bookSlot', {
      slotId: newSlot.id,
      lesson: testLesson,
      bookedStudentId: 'student_1'
    });
  }
});

// –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ—Ç–∞
client2.on('slotBooked', (data) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–ª—É—á–∏–ª –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç–∞:', data.slotId);
  testResults.slotBooked = true;
  
  if (data.slotId.includes('test_slot_')) {
    console.log('‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    
    // –¢–µ—Å—Ç 7: –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üì§ –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞...');
    
    client1.emit('cancelSlot', {
      slotId: data.slotId,
      lessonId: data.lesson.id
    });
  }
});

// –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
client2.on('slotCancelled', (data) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–ª—É—á–∏–ª –æ—Ç–º–µ–Ω—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', data.slotId);
  testResults.slotCancelled = true;
  
  if (data.slotId.includes('test_slot_')) {
    console.log('‚úÖ –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    
    // –¢–µ—Å—Ç 9: –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞
    console.log('üì§ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞...');
    
    client1.emit('deleteSlot', {
      slotId: data.slotId
    });
  }
});

// –¢–µ—Å—Ç 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ—Ç–∞
client2.on('slotDeleted', (data) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–ª—É—á–∏–ª —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞:', data.slotId);
  testResults.slotDeleted = true;
  
  if (data.slotId.includes('test_slot_')) {
    console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ dataUpdated —Å–æ–±—ã—Ç–∏–π
client2.on('dataUpdated', (data) => {
  console.log('üì• –ö–ª–∏–µ–Ω—Ç 2 –ø–æ–ª—É—á–∏–ª dataUpdated:', data.type);
  
  switch (data.type) {
    case 'slotCreated':
      console.log('‚úÖ dataUpdated: slotCreated —Ä–∞–±–æ—Ç–∞–µ—Ç');
      break;
    case 'slotBooked':
      console.log('‚úÖ dataUpdated: slotBooked —Ä–∞–±–æ—Ç–∞–µ—Ç');
      break;
    case 'slotCancelled':
      console.log('‚úÖ dataUpdated: slotCancelled —Ä–∞–±–æ—Ç–∞–µ—Ç');
      break;
    case 'slotDeleted':
      console.log('‚úÖ dataUpdated: slotDeleted —Ä–∞–±–æ—Ç–∞–µ—Ç');
      break;
  }
});

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ª–æ—Ç–æ–≤:');
  console.log(`üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É: ${testResults.connection ? '‚úÖ' : '‚ùå'}`);
  console.log(`üìÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ—Ç–æ–≤: ${testResults.slotsLoaded ? '‚úÖ' : '‚ùå'}`);
  console.log(`‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—Ç–∞: ${testResults.slotCreated ? '‚úÖ' : '‚ùå'}`);
  console.log(`üìñ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç–∞: ${testResults.slotBooked ? '‚úÖ' : '‚ùå'}`);
  console.log(`‚ùå –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${testResults.slotCancelled ? '‚úÖ' : '‚ùå'}`);
  console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞: ${testResults.slotDeleted ? '‚úÖ' : '‚ùå'}`);
  
  const allTestsPassed = Object.values(testResults).every(result => result);
  
  if (allTestsPassed) {
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
  }
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
  client1.disconnect();
  client2.disconnect();
  process.exit(0);
}, 8000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
client1.on('connect_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ 1:', error.message);
});

client2.on('connect_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ 2:', error.message);
});

client1.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ 1:', error);
});

client2.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ 2:', error);
});
