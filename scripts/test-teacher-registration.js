#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤–∏–¥–Ω—ã —É—á–µ–Ω–∏–∫–∞–º
 */

const fetch = require('node-fetch');

const SERVER_URL = process.env.SERVER_URL || 'http://localhost:3001';

async function testTeacherRegistration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤...');
  console.log(`üåê –°–µ—Ä–≤–µ—Ä: ${SERVER_URL}`);

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${SERVER_URL}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${healthResponse.status}`);
    }
    const healthData = await healthResponse.json();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω:', healthData.status);

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π...');
    const teachersResponse = await fetch(`${SERVER_URL}/api/teachers`);
    if (!teachersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teachersResponse.status}`);
    }
    const currentTeachers = await teachersResponse.json();
    console.log(`üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${currentTeachers.length}`);

    // 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
    console.log('\n3Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞...');
    const testTeacher = {
      email: `test-teacher-${Date.now()}@example.com`,
      password: 'test123',
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –†–µ–ø–µ—Ç–∏—Ç–æ—Ä',
      nickname: `test-teacher-${Date.now()}`,
      role: 'teacher',
      phone: '+7 (999) 123-45-67'
    };

    const registerResponse = await fetch(`${SERVER_URL}/api/register`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testTeacher)
    });

    if (!registerResponse.ok) {
      const errorData = await registerResponse.json();
      throw new Error(`–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${errorData.error}`);
    }

    const newTeacher = await registerResponse.json();
    console.log('‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', {
      id: newTeacher.id,
      name: newTeacher.name,
      email: newTeacher.email,
      role: newTeacher.role
    });

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ...');
    const updatedTeachersResponse = await fetch(`${SERVER_URL}/api/teachers`);
    if (!updatedTeachersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: ${updatedTeachersResponse.status}`);
    }
    const updatedTeachers = await updatedTeachersResponse.json();
    console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${updatedTeachers.length}`);

    const foundTeacher = updatedTeachers.find(t => t.id === newTeacher.id);
    if (foundTeacher) {
      console.log('‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π');
    } else {
      console.log('‚ùå –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...');
    const syncResponse = await fetch(`${SERVER_URL}/api/sync`);
    if (!syncResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${syncResponse.status}`);
    }
    const syncData = await syncResponse.json();
    
    const teacherInSync = syncData.teacherProfiles && syncData.teacherProfiles[newTeacher.id];
    if (teacherInSync) {
      console.log('‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    } else {
      console.log('‚ùå –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await fetch(`${SERVER_URL}/api/users`);
    if (!usersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.status}`);
    }
    const allUsers = await usersResponse.json();
    
    const teacherUsers = allUsers.filter(u => u.role === 'teacher');
    const foundUser = allUsers.find(u => u.id === newTeacher.id);
    
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${allUsers.length}`);
    console.log(`üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teacherUsers.length}`);
    
    if (foundUser) {
      console.log('‚úÖ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } else {
      console.log('‚ùå –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   ‚Ä¢ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ‚úÖ`);
    console.log(`   ‚Ä¢ –ü–æ—è–≤–∏–ª—Å—è –≤ /api/teachers: ${foundTeacher ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –ù–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${teacherInSync ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ –ù–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${foundUser ? '‚úÖ' : '‚ùå'}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTeacherRegistration();
