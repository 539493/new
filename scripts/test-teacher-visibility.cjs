#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
 */

const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const SERVER_URL = process.env.SERVER_URL || 'http://localhost:3001';

async function testTeacherVisibility() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π...');
  console.log(`üåê –°–µ—Ä–≤–µ—Ä: ${SERVER_URL}`);

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${SERVER_URL}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${healthResponse.status}`);
    }
    const healthData = await healthResponse.json();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω:', healthData.status);

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ /api/teachers
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ /api/teachers...');
    const teachersResponse = await fetch(`${SERVER_URL}/api/teachers`);
    if (!teachersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teachersResponse.status}`);
    }
    const teachers = await teachersResponse.json();
    console.log(`üìä –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ /api/teachers: ${teachers.length}`);
    
    if (teachers.length > 0) {
      console.log('üë®‚Äçüè´ –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:');
      teachers.forEach((teacher, index) => {
        console.log(`   ${index + 1}. ${teacher.name} (ID: ${teacher.id})`);
        console.log(`      - –ê–≤–∞—Ç–∞—Ä: ${teacher.avatar ? '‚úÖ' : '‚ùå'}`);
        console.log(`      - –ü—Ä–µ–¥–º–µ—Ç—ã: ${teacher.profile?.subjects?.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}`);
        console.log(`      - –†–µ–π—Ç–∏–Ω–≥: ${teacher.profile?.rating || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      });
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —á–µ—Ä–µ–∑ /api/teachers');
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ /api/users
    console.log('\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ /api/users...');
    const usersResponse = await fetch(`${SERVER_URL}/api/users`);
    if (!usersResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.status}`);
    }
    const users = await usersResponse.json();
    const teacherUsers = users.filter(u => u.role === 'teacher');
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    console.log(`üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ /api/users: ${teacherUsers.length}`);
    
    if (teacherUsers.length > 0) {
      console.log('üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏–∑ /api/users:');
      teacherUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.name} (ID: ${user.id})`);
        console.log(`      - Email: ${user.email}`);
        console.log(`      - –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}`);
        console.log(`      - –ü—Ä–µ–¥–º–µ—Ç—ã: ${user.profile?.subjects?.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}`);
      });
    }

    // 4. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    const syncResponse = await fetch(`${SERVER_URL}/api/sync`);
    if (!syncResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${syncResponse.status}`);
    }
    const syncData = await syncResponse.json();
    
    const teacherProfilesCount = Object.keys(syncData.teacherProfiles || {}).length;
    const studentProfilesCount = Object.keys(syncData.studentProfiles || {}).length;
    
    console.log(`üìä –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:`);
    console.log(`   üë®‚Äçüè´ –ü—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teacherProfilesCount}`);
    console.log(`   üë®‚Äçüéì –ü—Ä–æ—Ñ–∏–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${studentProfilesCount}`);
    console.log(`   üìÖ –°–ª–æ—Ç–æ–≤: ${syncData.timeSlots?.length || 0}`);
    console.log(`   üìö –£—Ä–æ–∫–æ–≤: ${syncData.lessons?.length || 0}`);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...');
    
    const teachersFromAPI = teachers.map(t => t.id);
    const teachersFromUsers = teacherUsers.map(u => u.id);
    const teachersFromSync = Object.keys(syncData.teacherProfiles || {});
    
    console.log(`üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:`);
    console.log(`   /api/teachers: ${teachersFromAPI.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`   /api/users: ${teachersFromUsers.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`   /api/sync: ${teachersFromSync.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –æ–¥–Ω–æ–º –∏—Å—Ç–æ—á–Ω–∏–∫–µ, –Ω–æ –Ω–µ—Ç –≤ –¥—Ä—É–≥–æ–º
    const onlyInAPI = teachersFromAPI.filter(id => !teachersFromUsers.includes(id));
    const onlyInUsers = teachersFromUsers.filter(id => !teachersFromAPI.includes(id));
    const onlyInSync = teachersFromSync.filter(id => !teachersFromAPI.includes(id) && !teachersFromUsers.includes(id));
    
    if (onlyInAPI.length > 0) {
      console.log(`‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Ç–æ–ª—å–∫–æ –≤ /api/teachers: ${onlyInAPI.join(', ')}`);
    }
    if (onlyInUsers.length > 0) {
      console.log(`‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Ç–æ–ª—å–∫–æ –≤ /api/users: ${onlyInUsers.join(', ')}`);
    }
    if (onlyInSync.length > 0) {
      console.log(`‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Ç–æ–ª—å–∫–æ –≤ /api/sync: ${onlyInSync.join(', ')}`);
    }
    
    if (onlyInAPI.length === 0 && onlyInUsers.length === 0 && onlyInSync.length === 0) {
      console.log('‚úÖ –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã');
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å–æ —Å–ª–æ—Ç–∞–º–∏
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å–ª–æ—Ç–∞–º–∏...');
    const teachersWithSlots = new Set();
    if (syncData.timeSlots) {
      syncData.timeSlots.forEach(slot => {
        if (slot.teacherId) {
          teachersWithSlots.add(slot.teacherId);
        }
      });
    }
    console.log(`üìÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å–ª–æ—Ç–∞–º–∏: ${teachersWithSlots.size}`);
    
    if (teachersWithSlots.size > 0) {
      console.log('üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å–æ —Å–ª–æ—Ç–∞–º–∏:');
      Array.from(teachersWithSlots).forEach(teacherId => {
        const teacher = teachers.find(t => t.id === teacherId) || teacherUsers.find(u => u.id === teacherId);
        const teacherName = teacher ? teacher.name : `ID: ${teacherId}`;
        console.log(`   - ${teacherName} (${teacherId})`);
      });
    }

    // 7. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –≤ /api/teachers: ${teachers.length}`);
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –≤ /api/users: ${teacherUsers.length}`);
    console.log(`   ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ /api/sync: ${teacherProfilesCount}`);
    console.log(`   ‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å–ª–æ—Ç–∞–º–∏: ${teachersWithSlots.size}`);
    console.log(`   ‚Ä¢ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö: ${onlyInAPI.length === 0 && onlyInUsers.length === 0 && onlyInSync.length === 0 ? '‚úÖ' : '‚ö†Ô∏è'}`);
    
    if (teachers.length === 0 && teacherUsers.length === 0 && teacherProfilesCount === 0) {
      console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –≤ –æ–¥–Ω–æ–º –∏—Å—Ç–æ—á–Ω–∏–∫–µ!');
      console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
      console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
      console.log('   - –û—à–∏–±–∫–∏ –≤ API endpoints');
    } else if (teachers.length > 0) {
      console.log('\n‚úÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTeacherVisibility();
